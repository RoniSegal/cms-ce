
allprojects {
	group = 'com.enonic.cms'
	buildNumber = new Date().format("yyyyMMdd.HHmmss")
    scriptDir = "$rootDir/scripts"
}

versions = [
 	servlet:  '2.5',
    hibernate: '3.5.6-Final',
    spring: '3.0.5.RELEASE',
    spring_osgi: '1.2.1',
    slf4j: '1.6.1',
    saxon: '9.1.0.8',
    jackrabbit: '2.2.4',
    junit: '4.8.2'
]

allprojects {
	repositories {
		mavenCentral()
		mavenRepo urls: 'http://repo.enonic.com/maven'
	}
}

javaProjects = subprojects.findAll { project ->
	project.path.startsWith(':cms-')
}

warProjects = subprojects.findAll { project ->
	project.path.equals(':cms-webapp')
}

configure(javaProjects) {
	apply plugin: 'java'
    apply from: "$rootDir/scripts/java.gradle"
	
	configurations {
	 	all*.exclude group: 'xml-apis'
		all*.exclude group: 'commons-logging'
		all*.exclude group: 'xerces'
	}
}

configure(warProjects) {
	apply plugin: 'war'
}

project(':cms-api') {
	description = 'Enonic CMS Api'
	dependencies {
		compile 'org.jdom:jdom:1.1.1'
	 	compile "javax.servlet:servlet-api:${versions.servlet}"
	 	runtime('jaxen:jaxen:1.1.1') { transitive = false }
	}
}

project(':cms-core') {
	description = 'Enonic CMS Core'
	dependencies {
        compile project(':cms-api')
        compile 'com.google.guava:guava:r08'
        compile 'commons-io:commons-io:1.1'
        compile 'commons-lang:commons-lang:2.4'
        compile('commons-beanutils:commons-beanutils:1.7.0') 
        compile 'commons-codec:commons-codec:1.3'
        compile 'commons-collections:commons-collections:3.2'
        compile 'commons-fileupload:commons-fileupload:1.1.1'
        compile 'com.sun.xml.fastinfoset:FastInfoset:1.1.8'
        compile 'joda-time:joda-time:1.4'
        compile('com.octo.captcha:jcaptcha-all:1.0-RC6') { transitive = false }
        compile "net.sf.saxon:saxon:${versions.saxon}"
        compile "net.sf.saxon:saxon-dom:${versions.saxon}"
        compile "net.sf.saxon:saxon-jdom:${versions.saxon}"
        compile 'org.codehaus.jparsec:jparsec:2.0'
        compile 'javax.mail:mail:1.4'
        compile("org.hibernate:hibernate-core:${versions.hibernate}") 
        compile 'javassist:javassist:3.4.GA'
        compile 'org.freemarker:freemarker:2.3.16'
        compile 'org.directwebremoting:dwr:2.0.1'
        compile 'tidy:tidy:1.0'
        compile "org.springframework:spring-webmvc:${versions.spring}"
        compile "org.springframework:spring-expression:${versions.spring}"
        compile "org.springframework:spring-orm:${versions.spring}"
        compile 'com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:1.0'
        compile "org.slf4j:slf4j-api:${versions.slf4j}"
        compile "org.slf4j:jcl-over-slf4j:${versions.slf4j}"
        compile "org.slf4j:log4j-over-slf4j:${versions.slf4j}"
        compile "org.slf4j:slf4j-jdk14:${versions.slf4j}"
        compile("org.apache.jackrabbit:jackrabbit-webdav:${versions.jackrabbit}") {
			exclude group: 'commons-httpclient'
	 	}
	 	compile 'cglib:cglib-nodep:2.2'
	 	compile("org.springframework.osgi:spring-osgi-io:${versions.spring_osgi}") { transitive = false }
	 	compile("org.springframework.osgi:spring-osgi-core:${versions.spring_osgi}") { transitive = false }
		compile 'org.apache.felix:org.apache.felix.framework:3.0.4'
	 	compile 'org.apache.felix:org.apache.felix.utils:1.1.0'
	 	compile 'org.twdata.pkgscanner:package-scanner:0.9.5'
	    compile 'biz.aQute:bndlib:1.43.0'
        testCompile "junit:junit:${versions.junit}"
        testCompile 'junit-addons:junit-addons:1.4'
        testCompile "org.springframework:spring-test:${versions.spring}"
        testCompile 'org.easymock:easymock:2.2'
        testCompile 'org.easymock:easymockclassextension:2.2.1'
        testCompile 'org.mockito:mockito-all:1.8.5'
        testCompile 'xmlunit:xmlunit:1.2'
        testRuntime 'com.h2database:h2:1.3.151'
	}
}

project(':cms-webapp') {
	dependencies {
		compile project(':cms-core')
	 	providedCompile "javax.servlet:servlet-api:${versions.servlet}"
	}
}

